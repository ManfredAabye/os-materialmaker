name: Build os-materialmaker

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller>=6.0.0 pillow>=10.0.0 requests>=2.31.0 tkinterdnd2 numpy
        
    - name: Get latest version file
      id: get_version
      run: |
        $files = Get-ChildItem -Name "os-materialmaker_*.py" | Sort-Object
        $latest = $files[-1]
        $version = ($latest -replace "os-materialmaker_(.+)\.py", '$1')
        Write-Output "latest_file=$latest" >> $env:GITHUB_OUTPUT
        Write-Output "version=$version" >> $env:GITHUB_OUTPUT
        Write-Host "Latest version: $version"
        
    - name: Syntax check
      run: python -m py_compile ${{ steps.get_version.outputs.latest_file }}
        
    - name: Build with PyInstaller
      run: |
        $iconPath = ""
        if (Test-Path "Resources\PBRlogok.png") { $iconPath = "--icon=Resources\PBRlogok.png" }
        
        pyinstaller --onefile --windowed --name "os-materialmaker-${{ steps.get_version.outputs.version }}-windows" $iconPath --add-data "Resources;Resources" --hidden-import="tkinter" --hidden-import="PIL" --hidden-import="tkinterdnd2" --hidden-import="numpy" ${{ steps.get_version.outputs.latest_file }}
        
    - name: Create portable package
      run: |
        New-Item -ItemType Directory -Path "portable" -Force
        Copy-Item "dist\os-materialmaker-${{ steps.get_version.outputs.version }}-windows.exe" "portable\"
        if (Test-Path "Resources") { Copy-Item "Resources" "portable\" -Recurse }
        if (Test-Path "README.md") { Copy-Item "README.md" "portable\" }
        if (Test-Path "LICENSE") { Copy-Item "LICENSE" "portable\" }
        
        @"
        @echo off
        echo Starting os-materialmaker...
        os-materialmaker-${{ steps.get_version.outputs.version }}-windows.exe
        pause
        "@ | Out-File -FilePath "portable\start.bat" -Encoding ASCII
        
        Compress-Archive -Path "portable\*" -DestinationPath "os-materialmaker-${{ steps.get_version.outputs.version }}-windows-portable.zip"
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: windows-build-${{ steps.get_version.outputs.version }}
        path: |
          dist/os-materialmaker-${{ steps.get_version.outputs.version }}-windows.exe
          os-materialmaker-${{ steps.get_version.outputs.version }}-windows-portable.zip

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [build-windows]
    runs-on: ubuntu-latest
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        merge-multiple: true
      
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          *-portable.zip
          os-materialmaker-*-windows.exe
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
